import{l as o,a as n,m as u}from"./index-D6nYE89H.js";const r=o.create({timeout:1e3});r.interceptors.request.use(e=>{const{getToken:t}=n(),a=t();return a&&(e.headers.Authorization=`Bearer ${a}`,console.log(e.headers.Authorization)),e},e=>Promise.reject(e));r.interceptors.response.use(e=>e.status===200?e:e.status===404?Promise.reject("404: 페이지 없음 "+e.request):e,async e=>{var t;if(((t=e.response)==null?void 0:t.status)===401){const{logout:a}=n();return a(),u.push("/auth/login?error=login_required"),Promise.reject({error:"로그인이 필요한 서비스입니다."})}return Promise.reject(e)});const s="/api/member",c={"Content-Type":"multipart/form-data"},p={async checkUsername(e){const{data:t}=await r.get(`${s}/checkusername/${e}`);return console.log("AUTH GET CHECKUSERNAME",t),t},async create(e){const t=new FormData;t.append("username",e.username),t.append("email",e.email),t.append("password",e.password),e.avatar&&t.append("avatar",e.avatar);const{data:a}=await r.put(`${s}/${e.username}`,t,c);return console.log("AUTH POST: ",a),a},async changePassword(e){const{data:t}=await r.put(`${s}/${e.username}/changepassword`,e);return console.log("AUTH PUT: ",t),t}};export{p as a};
