import{l as n,a as o,m as u}from"./index-BnEpKZsT.js";const r=n.create({timeout:1e3});r.interceptors.request.use(t=>{const{getToken:e}=o(),a=e();return a&&(t.headers.Authorization=`Bearer ${a}`,console.log(t.headers.Authorization)),t},t=>Promise.reject(t));r.interceptors.response.use(t=>t.status===200?t:t.status===404?Promise.reject("404: 페이지 없음 "+t.request):t,async t=>{var e;if(((e=t.response)==null?void 0:e.status)===401){const{logout:a}=o();return a(),u.push("/auth/login?error=login_required"),Promise.reject({error:"로그인이 필요한 서비스입니다."})}return Promise.reject(t)});const s="/api/member",c={"Content-Type":"multipart/form-data"},p={async checkUsername(t){const{data:e}=await r.get(`${s}/checkusername/${t}`);return console.log("AUTH GET CHECKUSERNAME",e),e},async create(t){const e=new FormData;e.append("username",t.username),e.append("email",t.email),e.append("password",t.password),t.avatar&&e.append("avatar",t.avatar);const{data:a}=await r.put(`${s}/${t.username}`,e,c);return console.log("AUTH POST: ",a),a}};export{p as a};
